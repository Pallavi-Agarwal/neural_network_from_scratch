import numpy
def pooling(feature_map, size=2, stride=2):
    pool_out = numpy.zeros((numpy.uint16((feature_map.shape[0] - size + 1) / stride),
                            numpy.uint16((feature_map.shape[1] - size + 1) / stride),
                                                          feature_map.shape[-1]))

    for map_num in range(feature_map.shape[-1]):
        r2 = 0
        for r in numpy.arange(0, feature_map.shape[0] - size - 1, stride):
            c2=0
            for c in numpy.arange(0,feature_map.shape[0]-size-1,stride):
                pool_out[r2,c2,map_num]=numpy.max(feature_map[r:r+stride,c:c+size])
                c2=c2+1
            r2=r2+1



